{
  "authors": ["Cisco Systems Inc."],
  "annotations": {
    "type": "langgraph"
  },
  "created_at": "2025-05-21T00:00:00Z",
  "name": "org.agntcy.mailcomposer",
  "description": "Offer a chat interface to compose an email for a marketing campaign. Final output is the email that could be used for the campaign",
  "version": "0.0.1",
  "schema_version": "0.3.1",
  "skills": [
    {
      "category_name": "Natural Language Processing",
      "category_uid": 1,
      "class_name": "Dialogue Generation",
      "class_uid": 10204
    },
    {
      "category_name": "Natural Language Processing",
      "category_uid": 1,
      "class_name": "Text Completion",
      "class_uid": 10201
    },
    {
      "category_name": "Natural Language Processing",
      "category_uid": 1,
      "class_name": "Text Paraphrasing",
      "class_uid": 10203
    },
    {
      "category_name": "Natural Language Processing",
      "category_uid": 1,
      "class_name": "Text Style Transfer",
      "class_uid": 10206
    },
    {
      "category_name": "Natural Language Processing",
      "category_uid": 1,
      "class_name": "Tone and Style Adjustment",
      "class_uid": 10602
    },
    {
      "category_name": "Natural Language Processing",
      "category_uid": 1,
      "class_name": "Contextual Comprehension",
      "class_uid": 10101
    }
  ],
  "locators": [
    {
      "type": "source-code",
      "url": "https://github.com/agntcy/agentic-apps/tree/main/mailcomposer"
    },
    {
      "type": "py-package",
      "url": "https://github.com/agntcy/agentic-apps/tree/main/mailcomposer/pyproject.toml"
    }
  ],  
  "extensions": [     
    {
      "name": "schema.oasf.agntcy.org/features/runtime/manifest",
      "data": {
        "acp": {
          "capabilities": {
            "threads": false,
            "interrupts": true,
            "callbacks": false
          },
          "input": {
            "$defs": {
              "Message": {
                "properties": {
                  "type": {
                    "$ref": "#/$defs/Type",
                    "description": "indicates the originator of the message, a human or an assistant"
                  },
                  "content": {
                    "description": "the content of the message",
                    "title": "Content",
                    "type": "string"
                  }
                },
                "required": ["type", "content"],
                "title": "Message",
                "type": "object"
              },
              "Type": {
                "enum": ["human", "assistant", "ai"],
                "title": "Type",
                "type": "string"
              }
            },
            "properties": {
              "messages": {
                "anyOf": [
                  {
                    "items": {
                      "$ref": "#/$defs/Message"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Messages"
              },
              "is_completed": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Is Completed"
              }
            },
            "title": "AgentState",
            "type": "object"
          },
          "output": {
            "$defs": {
              "Message": {
                "properties": {
                  "type": {
                    "$ref": "#/$defs/Type",
                    "description": "indicates the originator of the message, a human or an assistant"
                  },
                  "content": {
                    "description": "the content of the message",
                    "title": "Content",
                    "type": "string"
                  }
                },
                "required": ["type", "content"],
                "title": "Message",
                "type": "object"
              },
              "Type": {
                "enum": ["human", "assistant", "ai"],
                "title": "Type",
                "type": "string"
              }
            },
            "properties": {
              "messages": {
                "anyOf": [
                  {
                    "items": {
                      "$ref": "#/$defs/Message"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Messages"
              },
              "is_completed": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Is Completed"
              },
              "final_email": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Final email produced by the mail composer, in html format",
                "title": "Final Email"
              }
            },
            "title": "OutputState",
            "type": "object"
          },
          "config": {
            "properties": {
              "test": {
                "title": "Test",
                "type": "boolean"
              }
            },
            "required": ["test"],
            "title": "ConfigSchema",
            "type": "object"
          },
          "interrupts": [
            {
              "interrupt_type": "format_email",
              "interrupt_payload": {
                "$defs": {
                  "Message": {
                    "properties": {
                      "type": {
                        "$ref": "#/$defs/Type",
                        "description": "indicates the originator of the message, a human or an assistant"
                      },
                      "content": {
                        "description": "the content of the message",
                        "title": "Content",
                        "type": "string"
                      }
                    },
                    "required": ["type", "content"],
                    "title": "Message",
                    "type": "object"
                  },
                  "Type": {
                    "enum": ["human", "assistant", "ai"],
                    "title": "Type",
                    "type": "string"
                  }
                }
              },
              "resume_payload": {
                "$defs": {
                  "Message": {
                    "properties": {
                      "type": {
                        "$ref": "#/$defs/Type",
                        "description": "indicates the originator of the message, a human or an assistant"
                      },
                      "content": {
                        "description": "the content of the message",
                        "title": "Content",
                        "type": "string"
                      }
                    },
                    "required": ["type", "content"],
                    "title": "Message",
                    "type": "object"
                  },
                  "Type": {
                    "enum": ["human", "assistant", "ai"],
                    "title": "Type",
                    "type": "string"
                  }
                }
              }
            }
          ]
        },
        "deployment": {
          "deployment_options": [
            {
              "type": "source_code",
              "name": "source_code_local",
              "url": "file://./../",
              "framework_config": {
                "framework_type": "langgraph",
                "graph": "mailcomposer.mailcomposer:graph"
              }
            }
          ],
          "env_vars": [
            {
              "desc": "Azure key for the OpenAI service",
              "name": "AZURE_OPENAI_API_KEY"
            },
            {
              "desc": "Azure endpoint for the OpenAI service",
              "name": "AZURE_OPENAI_ENDPOINT"
            }
          ],
          "agent_deps": []
        }
      }
    }
  ]
}